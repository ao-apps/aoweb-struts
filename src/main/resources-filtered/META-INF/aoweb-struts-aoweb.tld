<?xml version="1.0" encoding="UTF-8"?>
<!--
aoweb-struts - Template webapp for legacy Struts-based site framework with AOServ Platform control panels.
Copyright (C) 2007-2009, 2016, 2019, 2021  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of aoweb-struts.

aoweb-struts is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

aoweb-struts is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with aoweb-struts.  If not, see <http://www.gnu.org/licenses />.
-->
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
	version="2.1">
	<!-- datePublished="2016-10-07T16:24:47-05:00" -->
	<!-- dateModified="2016-11-10T22:36:09-06:00" -->
	<description><![CDATA[
		<p>@{description.html}</p>
	]]></description>
	<display-name>@{project.name} AOWeb Taglib</display-name>
	<tlib-version>
		<!-- Release: @{project.version} -->
		@{parsedVersion.majorVersion}.@{parsedVersion.minorVersion}.@{parsedVersion.incrementalVersion}
	</tlib-version>
	<short-name>aoweb</short-name>
	<uri>@{project.url}aoweb-taglib/</uri>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>Conditionally includes the body if the resources with the provided path exists.</p>
		]]></description>
		<name>exists</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.ExistsTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<description><![CDATA[
				<p>The context-relative path to test existence.  This does not support relative paths.</p>
			]]></description>
			<name>path</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>Conditionally includes the body if the resources with the provided path does not exist.</p>
		]]></description>
		<name>notExists</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.NotExistsTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<description><![CDATA[
				<p>The context-relative path to test existence.  This does not support relative paths.</p>
			]]></description>
			<name>path</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Some scripts may benefit by delaying or batching their execution.  This
				is especially true when making many changes to the DOM.  By nesting
				related script-generating tags inside a scriptGroup, the execution
				will be batched into a single script.
			</p>
		]]></description>
		<name>scriptGroup</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.ScriptGroupTag</tag-class>
		<tei-class>com.aoindustries.web.struts.aowebtags.ScriptGroupTagTEI</tei-class>
		<body-content>JSP</body-content>
		<attribute>
			<description><![CDATA[
				<p>
					Supports three options:
				</p>
				<ol>
					<li><code>none</code> (the default) - executes the script directly in the body</li>
					<li><code>before</code> - executes the script before any existing onload script</li>
					<li><code>after</code> - executes the script after any existing onload script</li>
				</ol>
				<p>
					TODO: Consider renaming to something more generic and including option for ondomready event.
				</p>
			]]></description>
			<name>onloadMode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Prints a browser-local date.  The body should evaluate to the number of milliseconds since the Epoch.
				If the body is empty, will print <code>&amp;#160;</code> as a placeholder.
				This may optionally be placed into a <a href="@{project.url}aoweb-struts-aoweb.tld/tag-scriptGroup">&lt;aoweb:scriptGroup&gt;</a> tag to create a single large
				script instead of many small scripts.
			</p>
		]]></description>
		<name>date</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.DateTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Prints a browser-local date and time.  The body should evaluate to the number of milliseconds since the Epoch.
				If the body is empty, will print <code>&amp;#160;</code> as a placeholder.
				This may optionally be placed into a <a href="@{project.url}aoweb-struts-aoweb.tld/tag-scriptGroup">&lt;aoweb:scriptGroup&gt;</a> tag to create a single large
				script instead of many small scripts.
			</p>
		]]></description>
		<name>dateTime</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.DateTimeTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<tag>
		<!-- datePublished="2016-10-07T16:24:47-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Prints a browser-local time.  The body should evaluate to the number of milliseconds since the Epoch.
				If the body is empty, will print <code>&amp;#160;</code> as a placeholder.
				This may optionally be placed into a <a href="@{project.url}aoweb-struts-aoweb.tld/tag-scriptGroup">&lt;aoweb:scriptGroup&gt;</a> tag to create a single large
				script instead of many small scripts.
			</p>
		]]></description>
		<name>time</name>
		<tag-class>com.aoindustries.web.struts.aowebtags.TimeTag</tag-class>
		<body-content>JSP</body-content>
	</tag>
	<function>
		<!-- datePublished="2019-05-20T20:26:39-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Formats a card number for display.  The card number may be a full or masked format.
				Displays as "•••• ####", where the "####" is the last-four digits of the card
				number.  Each digit may be represented by a "?" when it is unknown.
			</p>
			<p>
				When <code>null</code>, <code>null</code> is returned.
			</p>
			<p>
				When an empty string, after trimming, an empty string is returned.
			</p>
		]]></description>
		<name>getCardNumberDisplay</name>
		<function-class>com.aoindustries.web.struts.aowebtags.Functions</function-class>
		<function-signature>java.lang.String getCardNumberDisplay(java.lang.String)</function-signature>
		<example><![CDATA[<code>${aoweb:getCardNumberDisplay(cardNumber)}</code>]]></example>
	</function>
	<function>
		<!-- datePublished="2019-05-20T20:26:39-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Formats a card expiration date for display in "MM / YYYY" format.
			</p>
			<p>
				When both <code>expirationMonth</code> and <code>expirationYear</code> are unknown, <code>null</code> is returned.
			</p>
			<p>
				When <code>expirationMonth</code> is unknown, returns in "?? / YYYY" format.
			</p>
			<p>
				When <code>expirationYear</code> is unknown, returns in "MM / ????" format.
			</p>
		]]></description>
		<name>getExpirationDisplay</name>
		<function-class>com.aoindustries.web.struts.aowebtags.Functions</function-class>
		<function-signature>java.lang.String getExpirationDisplay(java.lang.Byte,java.lang.Short)</function-signature>
		<example><![CDATA[<code>${aoweb:getExpirationDisplay(expirationMonth,expirationYear)}</code>]]></example>
	</function>
	<function>
		<!-- datePublished="2019-08-10T10:18:30-05:00" -->
		<!-- dateModified="2021-06-14T02:28:24-05:00" -->
		<description><![CDATA[
			<p>
				Gets the symbol for a currency in the current response locale.
			</p>
		]]></description>
		<name>getCurrencySymbol</name>
		<function-class>com.aoindustries.web.struts.aowebtags.Functions</function-class>
		<function-signature>java.lang.String getCurrencySymbol(java.util.Currency)</function-signature>
		<example><![CDATA[<code>${aoweb:getCurrencySymbol(currency)}</code>]]></example>
	</function>
</taglib>
